{"version":3,"file":"static/js/714.e256e940.chunk.js","mappings":"wTAaMA,EAAcC,EAAAA,GAAW,CAC7BC,MAAOD,EAAAA,KAAaE,SAAS,YAC7BC,SAAUH,EAAAA,KAAaE,SAAS,YAAYE,IAAI,KAGrCC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,GAAG,KAAIC,UACVH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAAe,CACbZ,MAAO,GACPE,SAAU,IAEZW,SApBe,SAAHC,EAAAC,GAA4C,IAAtCf,EAAKc,EAALd,MAAOE,EAAQY,EAARZ,SAAcc,EAASD,EAATC,UAC3CX,GACEY,EAAAA,EAAAA,IAAM,CACJjB,MAAAA,EACAE,SAAAA,KAGDgB,SACAC,MAAK,WACJH,GACF,GACJ,EAUMI,iBAAkBtB,EAAYY,UAE9BW,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAZ,SAAA,EACHH,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,QAAOd,SAChB,SAAAe,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAI,OACbN,EAAAA,EAAAA,MAACO,EAAAA,GAAW,CAACC,UAAWF,EAAKG,OAAO9B,OAAS2B,EAAKI,QAAQ/B,MAAMU,SAAA,EAC9DH,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACC,QAAQ,aAAYvB,SAAC,aAChCH,EAAAA,EAAAA,KAAC2B,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAT,GAAK,IACTU,GAAG,aACHC,KAAK,QACLC,YAAY,QACZrC,UAAQ,MAEVM,EAAAA,EAAAA,KAACgC,EAAAA,GAAgB,CAAA7B,SAAEiB,EAAKG,OAAO9B,UACnB,KAGlBO,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,WAAUd,SACnB,SAAA8B,GAAA,IAAGd,EAAKc,EAALd,MAAOC,EAAIa,EAAJb,KAAI,OACbN,EAAAA,EAAAA,MAACO,EAAAA,GAAW,CACVC,UAAWF,EAAKG,OAAO5B,UAAYyB,EAAKI,QAAQ7B,SAASQ,SAAA,EAEzDH,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CAACC,QAAQ,gBAAevB,SAAC,eACnCH,EAAAA,EAAAA,KAAC2B,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAT,GAAK,IACTU,GAAG,gBACHC,KAAK,WACLI,QAAQ,QACRC,MAAM,8CACNJ,YAAY,WACZrC,UAAQ,MAEVM,EAAAA,EAAAA,KAACgC,EAAAA,GAAgB,CAAA7B,SAAEiB,EAAKG,OAAO5B,aACnB,KAIlBK,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAACN,KAAK,SAASO,KAAK,KAAKnC,GAAG,IAAIoC,YAAY,QAAOnC,SAAC,iBAOrE,ECpFe,SAASoC,IACtB,OACEvC,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAAArC,UACRH,EAAAA,EAAAA,KAACH,EAAS,KAGhB,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\nimport { login } from 'redux/auth/operations';\n\nconst LoginSchema = yup.object({\n  email: yup.string().required('Required'),\n  password: yup.string().required('Required').min(7),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ email, password }, { resetForm }) => {\n    dispatch(\n      login({\n        email,\n        password,\n      })\n    )\n      .unwrap()\n      .then(() => {\n        resetForm();\n      });\n  };\n\n  return (\n    <Box mt=\"25\">\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={LoginSchema}\n      >\n        <Form>\n          <Field name=\"email\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.email && form.touched.email}>\n                <FormLabel htmlFor=\"emailLogin\">Email* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"emailLogin\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"password\">\n            {({ field, form }) => (\n              <FormControl\n                isInvalid={form.errors.password && form.touched.password}\n              >\n                <FormLabel htmlFor=\"passwordLogin\">Password*</FormLabel>\n                <Input\n                  {...field}\n                  id=\"passwordLogin\"\n                  type=\"password\"\n                  pattern=\".{7,}\"\n                  title=\"Password must be at least 7 characters long\"\n                  placeholder=\"Password\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n\n          <Button type=\"submit\" size=\"md\" mt=\"5\" colorScheme=\"green\">\n            Log in\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n","import { Container } from '@chakra-ui/react';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function LoginPage () {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n"],"names":["LoginSchema","yup","email","required","password","min","LoginForm","dispatch","useDispatch","_jsx","Box","mt","children","Formik","initialValues","onSubmit","_ref","_ref2","resetForm","login","unwrap","then","validationSchema","_jsxs","Form","Field","name","_ref3","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","Input","_objectSpread","id","type","placeholder","FormErrorMessage","_ref4","pattern","title","Button","size","colorScheme","LoginPage","Container"],"sourceRoot":""}