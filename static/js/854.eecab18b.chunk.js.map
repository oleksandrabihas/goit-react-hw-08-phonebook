{"version":3,"file":"static/js/854.eecab18b.chunk.js","mappings":"wTAaMA,EAAeC,EAAAA,GAAW,CAC9BC,KAAMD,EAAAA,KAAaE,SAAS,YAC5BC,MAAOH,EAAAA,KAAaE,SAAS,YAC7BE,SAAUJ,EAAAA,KAAaE,SAAS,YAAYG,IAAI,KAGrCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,GAAG,KAAIC,UACVH,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CACLC,cAAe,CAAEb,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDW,SAde,SAAHC,EAAAC,GAAkD,IAA5ChB,EAAIe,EAAJf,KAAME,EAAKa,EAALb,MAAOC,EAAQY,EAARZ,SAAuBa,EAATC,UACjDX,GACEY,EAAAA,EAAAA,IAAS,CACPlB,KAAAA,EACAE,MAAAA,EACAC,SAAAA,IAGN,EAOMgB,iBAAkBrB,EAAaa,UAE/BS,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAV,SAAA,EACHH,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAACtB,KAAK,OAAMW,SACf,SAAAY,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAI,OACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAW,CAACC,UAAWF,EAAKG,OAAO5B,MAAQyB,EAAKI,QAAQ7B,KAAKW,SAAA,EAC5DH,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACC,QAAQ,aAAYpB,SAAC,gBAChCH,EAAAA,EAAAA,KAACwB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAT,GAAK,IACTU,GAAG,aACHC,KAAK,OACLC,YAAY,OACZnC,UAAQ,MAEVO,EAAAA,EAAAA,KAAC6B,EAAAA,GAAgB,CAAA1B,SAAEc,EAAKG,OAAO5B,SACnB,KAGlBQ,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAACtB,KAAK,QAAOW,SAChB,SAAA2B,GAAA,IAAGd,EAAKc,EAALd,MAAOC,EAAIa,EAAJb,KAAI,OACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAW,CAACC,UAAWF,EAAKG,OAAO1B,OAASuB,EAAKI,QAAQ3B,MAAMS,SAAA,EAC9DH,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACC,QAAQ,cAAapB,SAAC,aACjCH,EAAAA,EAAAA,KAACwB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAT,GAAK,IACTU,GAAG,cACHC,KAAK,QACLC,YAAY,QACZnC,UAAQ,MAEVO,EAAAA,EAAAA,KAAC6B,EAAAA,GAAgB,CAAA1B,SAAEc,EAAKG,OAAO1B,UACnB,KAGlBM,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAACtB,KAAK,WAAUW,SACnB,SAAA4B,GAAA,IAAGf,EAAKe,EAALf,MAAOC,EAAIc,EAAJd,KAAI,OACbL,EAAAA,EAAAA,MAACM,EAAAA,GAAW,CACVC,UAAWF,EAAKG,OAAOzB,UAAYsB,EAAKI,QAAQ1B,SAASQ,SAAA,EAEzDH,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,CAACC,QAAQ,iBAAgBpB,SAAC,gBACpCH,EAAAA,EAAAA,KAACwB,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAT,GAAK,IACTU,GAAG,iBACHC,KAAK,WACLK,QAAQ,QACRC,MAAM,8CACNL,YAAY,WACZnC,UAAQ,MAEVO,EAAAA,EAAAA,KAAC6B,EAAAA,GAAgB,CAAA1B,SAAEc,EAAKG,OAAOzB,aACnB,KAIlBK,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACP,KAAK,SAASQ,KAAK,KAAKjC,GAAG,IAAIkC,YAAY,QAAOjC,SAAC,kBAOrE,EC7Fe,SAASkC,IACtB,OACErC,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAAAnC,UACRH,EAAAA,EAAAA,KAACH,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik, Field, Form } from 'formik';\nimport * as yup from 'yup';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n} from '@chakra-ui/react';\n\nconst SignUpSchema = yup.object({\n  name: yup.string().required('Required'),\n  email: yup.string().required('Required'),\n  password: yup.string().required('Required').min(7),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n  };\n\n  return (\n    <Box mt=\"25\">\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={SignUpSchema}\n      >\n        <Form>\n          <Field name=\"name\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\n                <FormLabel htmlFor=\"nameSignUp\">Username* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"nameSignUp\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"email\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.email && form.touched.email}>\n                <FormLabel htmlFor=\"emailSignUp\">Email* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"emailSignUp\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"password\">\n            {({ field, form }) => (\n              <FormControl\n                isInvalid={form.errors.password && form.touched.password}\n              >\n                <FormLabel htmlFor=\"passwordSignUp\">Password* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"passwordSignUp\"\n                  type=\"password\"\n                  pattern=\".{7,}\"\n                  title=\"Password must be at least 7 characters long\"\n                  placeholder=\"Password\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n\n          <Button type=\"submit\" size=\"md\" mt=\"5\" colorScheme=\"green\">\n            Sign up\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n};\n","import { Container } from '@chakra-ui/react';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n}\n"],"names":["SignUpSchema","yup","name","required","email","password","min","RegisterForm","dispatch","useDispatch","_jsx","Box","mt","children","Formik","initialValues","onSubmit","_ref","_ref2","resetForm","register","validationSchema","_jsxs","Form","Field","_ref3","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","Input","_objectSpread","id","type","placeholder","FormErrorMessage","_ref4","_ref5","pattern","title","Button","size","colorScheme","RegisterPage","Container"],"sourceRoot":""}